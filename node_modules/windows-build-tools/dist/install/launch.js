"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = require("chalk");
const child_process_1 = require("child_process");
const constants_1 = require("../constants");
const logging_1 = require("../logging");
const get_build_tools_installer_path_1 = require("../utils/get-build-tools-installer-path");
const get_build_tools_parameters_1 = require("../utils/get-build-tools-parameters");
const get_python_installer_path_1 = require("../utils/get-python-installer-path");
const debug = require('debug')('windows-build-tools');
const vccInstaller = get_build_tools_installer_path_1.getBuildToolsInstallerPath();
const pythonInstaller = get_python_installer_path_1.getPythonInstallerPath();
/**
 * Launches the installer, using a PS1 script as a middle-man
 *
 * @returns {Promise<void>} - Promise that resolves once done
 */
function launchInstaller() {
    return new Promise((resolve, reject) => {
        const vccParam = `-VisualStudioVersion '${constants_1.BUILD_TOOLS.version.toString()}'`;
        const pathParam = `-BuildToolsInstallerPath '${vccInstaller.directory}'`;
        const buildToolsParam = constants_1.IS_BUILD_TOOLS_INSTALLED
            ? ``
            : `-InstallBuildTools -ExtraBuildToolsParameters '${get_build_tools_parameters_1.getBuildToolsExtraParameters()}'`;
        const pythonParam = constants_1.IS_PYTHON_INSTALLED
            ? ``
            : `-PythonInstaller '${pythonInstaller.fileName}' -InstallPython`;
        const psArgs = `& {& '${constants_1.installerScriptPath}' ${pathParam} ${buildToolsParam} ${pythonParam} ${vccParam} }`;
        const args = ['-ExecutionPolicy', 'Bypass', '-NoProfile', '-NoLogo', psArgs];
        debug(`Installer: Launching installer in ${vccInstaller.directory} with parameters ${args}.`);
        let child;
        try {
            child = child_process_1.spawn('powershell.exe', args);
        }
        catch (error) {
            logging_1.log(chalk_1.default.bold.red('Error: failed while trying to run powershell.exe.'));
            logging_1.log(chalk_1.default.bold.greenBright('Hint: Is "%SystemRoot%\\System32\\WindowsPowerShell\\v1.0" in your system path?'));
            logging_1.log(`\nTried to execute: "powershell.exe ${args.join(' ')}"\n`);
            return reject(error);
        }
        child.stdout.on('data', (data) => {
            debug(`Installer: Stdout from launch-installer.ps1: ${data.toString()}`);
            if (data.toString().includes('Please restart this script from an administrative PowerShell!')) {
                logging_1.log(chalk_1.default.bold.red('Please restart this script from an administrative PowerShell!'));
                logging_1.log('The build tools cannot be installed without administrative rights.');
                logging_1.log('To fix, right-click on PowerShell and run "as Administrator".');
                // Bail out
                process.exit(1);
            }
        });
        child.stderr.on('data', (data) => debug(`Installer: Stderr from launch-installer.ps1: ${data.toString()}`));
        child.on('exit', () => resolve());
        child.stdin.end();
    });
}
exports.launchInstaller = launchInstaller;
//# sourceMappingURL=launch.js.map